//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Consola
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CualquieraDBEntities : DbContext
    {
        public CualquieraDBEntities()
            : base("name=CualquieraDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Articulo> Articulos { get; set; }
        public virtual DbSet<cliente> clientes { get; set; }
        public virtual DbSet<Empleado> Empleadoes { get; set; }
        public virtual DbSet<Encargado> Encargadoes { get; set; }
        public virtual DbSet<Evento> Eventos { get; set; }
        public virtual DbSet<Stock> Stocks { get; set; }
        public virtual DbSet<Sucursal> Sucursals { get; set; }
    
        public virtual int AltaCliente(string nombre, string apellido, string email, string telf)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telfParameter = telf != null ?
                new ObjectParameter("Telf", telf) :
                new ObjectParameter("Telf", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AltaCliente", nombreParameter, apellidoParameter, emailParameter, telfParameter);
        }
    
        public virtual int AltaProducto(string nombre, string descripcion, Nullable<decimal> precio, string categoria)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            var categoriaParameter = categoria != null ?
                new ObjectParameter("categoria", categoria) :
                new ObjectParameter("categoria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AltaProducto", nombreParameter, descripcionParameter, precioParameter, categoriaParameter);
        }
    
        public virtual int EventosProc(Nullable<int> id_evento, Nullable<int> id_empleados, Nullable<System.DateTime> fecha_log, string cambio)
        {
            var id_eventoParameter = id_evento.HasValue ?
                new ObjectParameter("id_evento", id_evento) :
                new ObjectParameter("id_evento", typeof(int));
    
            var id_empleadosParameter = id_empleados.HasValue ?
                new ObjectParameter("id_empleados", id_empleados) :
                new ObjectParameter("id_empleados", typeof(int));
    
            var fecha_logParameter = fecha_log.HasValue ?
                new ObjectParameter("fecha_log", fecha_log) :
                new ObjectParameter("fecha_log", typeof(System.DateTime));
    
            var cambioParameter = cambio != null ?
                new ObjectParameter("cambio", cambio) :
                new ObjectParameter("cambio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EventosProc", id_eventoParameter, id_empleadosParameter, fecha_logParameter, cambioParameter);
        }
    
        public virtual int Mod_Empleado(Nullable<int> id, string nombre, string apellido, Nullable<System.DateTime> fecha_de_egreso, Nullable<bool> estado, string telefono, string cuil)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var fecha_de_egresoParameter = fecha_de_egreso.HasValue ?
                new ObjectParameter("Fecha_de_egreso", fecha_de_egreso) :
                new ObjectParameter("Fecha_de_egreso", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var cuilParameter = cuil != null ?
                new ObjectParameter("Cuil", cuil) :
                new ObjectParameter("Cuil", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Mod_Empleado", idParameter, nombreParameter, apellidoParameter, fecha_de_egresoParameter, estadoParameter, telefonoParameter, cuilParameter);
        }
    
        public virtual int ProcAltaEmpleado(string nombre, string apellido, Nullable<System.DateTime> fecha_de_ingreso, Nullable<System.DateTime> fecha_de_egreso, Nullable<bool> estado, string telefono, string cuil, Nullable<int> idSuc)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var fecha_de_ingresoParameter = fecha_de_ingreso.HasValue ?
                new ObjectParameter("Fecha_de_ingreso", fecha_de_ingreso) :
                new ObjectParameter("Fecha_de_ingreso", typeof(System.DateTime));
    
            var fecha_de_egresoParameter = fecha_de_egreso.HasValue ?
                new ObjectParameter("Fecha_de_egreso", fecha_de_egreso) :
                new ObjectParameter("Fecha_de_egreso", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var cuilParameter = cuil != null ?
                new ObjectParameter("Cuil", cuil) :
                new ObjectParameter("Cuil", typeof(string));
    
            var idSucParameter = idSuc.HasValue ?
                new ObjectParameter("IdSuc", idSuc) :
                new ObjectParameter("IdSuc", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcAltaEmpleado", nombreParameter, apellidoParameter, fecha_de_ingresoParameter, fecha_de_egresoParameter, estadoParameter, telefonoParameter, cuilParameter, idSucParameter);
        }
    }
}
